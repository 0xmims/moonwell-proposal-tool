This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.gitignore
eslint.config.js
index.html
package.json
public/Horizontal-Black.svg
public/Horizontal-White.svg
public/vite.svg
README.md
src/App.css
src/App.jsx
src/assets/react.svg
src/components/ProposalTitleInput.jsx
src/context/ThemeContext.jsx
src/contracts/abis.js
src/contracts/addresses.js
src/index.css
src/main.jsx
src/pages/CustomProposalPage.jsx
src/pages/InstructionsPage.jsx
src/pages/MarketCreationPage.jsx
src/pages/MarketUpdatePage.jsx
src/utils/proposalLogic.js
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/components/ProposalTitleInput.jsx">
// src/components/ProposalTitleInput.jsx
import React, { useState, useEffect } from 'react';

function ProposalTitleInput({ onTitleChange }) {
  // State to manage the individual pieces of the title
  const [prefix, setPrefix] = useState('MIP-B');
  const [number, setNumber] = useState('XX');
  const [description, setDescription] = useState('Weekly Risk Parameter Updates');
  
  // Auto-generate the date string, e.g., (07/2025)
  const currentDate = new Date();
  const month = String(currentDate.getMonth() + 1).padStart(2, '0');
  const year = currentDate.getFullYear();
  const dateString = `(${month}/${year})`;

  // Whenever a piece of the title changes, reconstruct the full title and send it to the parent
  useEffect(() => {
    const fullTitle = `${prefix}${number}: ${description} ${dateString}`;
    onTitleChange(fullTitle);
  }, [prefix, number, description, dateString, onTitleChange]);

  return (
    <div className="proposal-title-builder">
      <div className="title-prefix-group">
        {/* The "#" is now static text, not part of the input */}
        <span className="title-hash">#</span>
        <select value={prefix} onChange={(e) => setPrefix(e.target.value)}>
          <option value="MIP-B">MIP-B (Base)</option>
          <option value="MIP-O">MIP-O (Optimism)</option>
          <option value="MIP-M">MIP-M (Moonbeam)</option>
          <option value="MIP-R">MIP-R (Moonriver)</option>
          <option value="MIP-X">MIP-X (All Networks)</option>
        </select>
        <input 
          type="text" 
          value={number} 
          onChange={(e) => setNumber(e.target.value)} 
          className="title-number-input"
          placeholder="XX"
        />
      </div>
      <div className="form-group">
        <label>Description</label>
        <input 
          type="text" 
          value={description} 
          onChange={(e) => setDescription(e.target.value)} 
          placeholder="e.g., Anthias Labs Monthly Recommendations"
        />
      </div>
    </div>
  );
}

export default ProposalTitleInput;
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "moonwell-proposal-tool",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "ethers": "^6.15.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.7.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.0.4"
  }
}
</file>

<file path="public/Horizontal-Black.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 331.81 49.32"><defs><style>.cls-1{fill:#0f0d0e;}</style></defs><g id="Layer_1-2"><path class="cls-1" d="m27.8,48.12c-2.18.78-4.54,1.2-6.99,1.2C9.32,49.32,0,40.01,0,28.51S9.32,7.7,20.81,7.7c2.45,0,4.8.42,6.99,1.2-8.06,2.87-13.83,10.57-13.83,19.61s5.77,16.74,13.83,19.61ZM48.76,7.7c-2.45,0-4.8.42-6.99,1.2,8.06,2.87,13.83,10.57,13.83,19.61s-5.77,16.74-13.83,19.61c2.18.78,4.54,1.2,6.99,1.2,11.5,0,20.81-9.32,20.81-20.81S60.25,7.7,48.76,7.7Z"/><path class="cls-1" d="m133.55,43.3v-14.95c0-2.48,0-5.25-1.04-7.1-.87-1.5-2.37-2.25-4.45-2.25-2.42,0-5.02,1.56-6.81,4.04.23,1.44.29,3.12.29,4.79v15.47h-6.99v-14.95c0-2.48,0-5.43-1.16-7.28-.81-1.39-2.25-2.08-4.16-2.08-2.37,0-5.02,1.85-6.7,3.98v20.32h-6.99V13.57h6.41l.29,3.98c2.31-3.12,5.77-4.68,8.89-4.68s6.12,1.39,8.03,4.04c.23.35.4.69.63,1.15,2.71-3.87,6.52-5.2,10.1-5.2s6.18,1.39,7.97,3.7c2.25,2.89,2.71,6.87,2.71,11.26v15.47h-7.04Z"/><path class="cls-1" d="m174.43,28.41c0,8.72-6.52,15.59-15.42,15.59s-15.42-6.87-15.42-15.59,6.52-15.53,15.42-15.53,15.42,6.87,15.42,15.53Zm-15.42-9.41c-4.85,0-8.31,4.21-8.31,9.41s3.46,9.47,8.31,9.47,8.31-4.21,8.31-9.47-3.46-9.41-8.31-9.41Z"/><path class="cls-1" d="m206.93,28.41c0,8.72-6.52,15.59-15.42,15.59s-15.42-6.87-15.42-15.59,6.52-15.53,15.42-15.53,15.42,6.87,15.42,15.53Zm-15.42-9.41c-4.85,0-8.31,4.21-8.31,9.41s3.46,9.47,8.31,9.47,8.31-4.21,8.31-9.47-3.46-9.41-8.31-9.41Z"/><path class="cls-1" d="m216.57,13.57l.35,4.39c2.37-3.41,5.89-5.08,9.47-5.08s6.35,1.44,8.2,3.81c2.19,2.89,2.66,6.81,2.66,11.14v15.47h-6.99v-14.95c0-2.48-.06-5.25-1.16-7.1-.87-1.5-2.37-2.25-4.5-2.25-2.77,0-5.66,1.79-7.39,4.56v19.75h-6.99V13.57h6.35Z"/><path class="cls-1" d="m268.53,33.84h.12l5.31-20.21h7.16l-8.6,29.68h-7.33l-5.37-19.46h-.12l-5.49,19.46h-7.62l-8.2-29.68h7.51l4.85,20.27h.12l5.72-20.27h6.58l5.37,20.21Z"/><path class="cls-1" d="m287.12,30.2c.46,4.45,3.46,8.08,8.31,8.08,3.87,0,6.35-1.5,8.2-4.62l4.73,3.18c-3.29,4.85-7.16,7.16-13.34,7.16-9.18,0-14.95-6.53-14.95-15.36s6.52-15.76,14.95-15.76,14.03,5.83,14.03,13.8c0,1.1-.12,2.42-.29,3.52h-21.65Zm8.08-11.72c-4.27,0-6.75,2.89-7.68,6.7h14.38c-.17-3.87-3-6.7-6.7-6.7Z"/><path class="cls-1" d="m319.34,43.3h-6.99V0h6.99v43.3Z"/><path class="cls-1" d="m331.81,43.3h-6.99V0h6.99v43.3Z"/></g></svg>
</file>

<file path="public/Horizontal-White.svg">
<?xml version="1.0" encoding="UTF-8"?><svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 331.81 49.32"><defs><style>.cls-1{fill:#f2f2f2;}</style></defs><g id="Layer_1-2"><path class="cls-1" d="m27.8,48.12c-2.18.78-4.54,1.2-6.99,1.2C9.32,49.32,0,40.01,0,28.51S9.32,7.7,20.81,7.7c2.45,0,4.8.42,6.99,1.2-8.06,2.87-13.83,10.57-13.83,19.61s5.77,16.74,13.83,19.61ZM48.76,7.7c-2.45,0-4.8.42-6.99,1.2,8.06,2.87,13.83,10.57,13.83,19.61s-5.77,16.74-13.83,19.61c2.18.78,4.54,1.2,6.99,1.2,11.5,0,20.81-9.32,20.81-20.81S60.25,7.7,48.76,7.7Z"/><path class="cls-1" d="m133.55,43.3v-14.95c0-2.48,0-5.25-1.04-7.1-.87-1.5-2.37-2.25-4.45-2.25-2.42,0-5.02,1.56-6.81,4.04.23,1.44.29,3.12.29,4.79v15.47h-6.99v-14.95c0-2.48,0-5.43-1.16-7.28-.81-1.39-2.25-2.08-4.16-2.08-2.37,0-5.02,1.85-6.7,3.98v20.32h-6.99V13.57h6.41l.29,3.98c2.31-3.12,5.77-4.68,8.89-4.68s6.12,1.39,8.03,4.04c.23.35.4.69.63,1.15,2.71-3.87,6.52-5.2,10.1-5.2s6.18,1.39,7.97,3.7c2.25,2.89,2.71,6.87,2.71,11.26v15.47h-7.04Z"/><path class="cls-1" d="m174.43,28.41c0,8.72-6.52,15.59-15.42,15.59s-15.42-6.87-15.42-15.59,6.52-15.53,15.42-15.53,15.42,6.87,15.42,15.53Zm-15.42-9.41c-4.85,0-8.31,4.21-8.31,9.41s3.46,9.47,8.31,9.47,8.31-4.21,8.31-9.47-3.46-9.41-8.31-9.41Z"/><path class="cls-1" d="m206.93,28.41c0,8.72-6.52,15.59-15.42,15.59s-15.42-6.87-15.42-15.59,6.52-15.53,15.42-15.53,15.42,6.87,15.42,15.53Zm-15.42-9.41c-4.85,0-8.31,4.21-8.31,9.41s3.46,9.47,8.31,9.47,8.31-4.21,8.31-9.47-3.46-9.41-8.31-9.41Z"/><path class="cls-1" d="m216.57,13.57l.35,4.39c2.37-3.41,5.89-5.08,9.47-5.08s6.35,1.44,8.2,3.81c2.19,2.89,2.66,6.81,2.66,11.14v15.47h-6.99v-14.95c0-2.48-.06-5.25-1.16-7.1-.87-1.5-2.37-2.25-4.5-2.25-2.77,0-5.66,1.79-7.39,4.56v19.75h-6.99V13.57h6.35Z"/><path class="cls-1" d="m268.53,33.84h.12l5.31-20.21h7.16l-8.6,29.68h-7.33l-5.37-19.46h-.12l-5.49,19.46h-7.62l-8.2-29.68h7.51l4.85,20.27h.12l5.72-20.27h6.58l5.37,20.21Z"/><path class="cls-1" d="m287.12,30.2c.46,4.45,3.46,8.08,8.31,8.08,3.87,0,6.35-1.5,8.2-4.62l4.73,3.18c-3.29,4.85-7.16,7.16-13.34,7.16-9.18,0-14.95-6.53-14.95-15.36s6.52-15.76,14.95-15.76,14.03,5.83,14.03,13.8c0,1.1-.12,2.42-.29,3.52h-21.65Zm8.08-11.72c-4.27,0-6.75,2.89-7.68,6.7h14.38c-.17-3.87-3-6.7-6.7-6.7Z"/><path class="cls-1" d="m319.34,43.3h-6.99V0h6.99v43.3Z"/><path class="cls-1" d="m331.81,43.3h-6.99V0h6.99v43.3Z"/></g></svg>
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
</file>

<file path="src/App.css">
/* src/App.css - UPGRADED LAYOUT STYLES */

.App {
  display: flex;
  max-width: 1400px;
  margin: 0 auto;
  background-color: var(--background-primary);
}

.sidebar {
  width: 240px;
  flex-shrink: 0;
  padding: 2rem;
  border-right: 1px solid var(--border-color);
  height: 100vh;
  position: sticky;
  top: 0;
  background-color: var(--background-secondary);
  /* Use flexbox to push the theme toggle to the bottom */
  display: flex;
  flex-direction: column;
}

.sidebar-header {
  margin-bottom: 2.5rem;
  padding-left: 10px;
}

.navigation {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.nav-link {
  text-decoration: none;
  color: var(--text-secondary);
  padding: 10px 15px;
  border-radius: 6px;
  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  font-weight: 500;
}

.nav-link:hover {
  background-color: var(--border-color);
  color: var(--text-primary);
}

.nav-link.active {
  background-color: var(--active-nav-bg);
  color: var(--color-primary);
  font-weight: bold;
}

/* This pushes the button to the bottom of the sidebar */
.theme-toggle {
  margin-top: auto;
  background-color: transparent;
  border: 1px solid var(--border-color);
  color: var(--text-secondary);
  text-align: center;
}
.theme-toggle:hover {
  border-color: var(--text-primary);
  color: var(--text-primary);
}

.content-area {
  flex-grow: 1;
  padding: 2rem 4rem;
  max-width: 800px;
}

/* --- Component-Specific Styles --- */

h2 {
  color: var(--text-primary);
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 0.75rem;
  margin-bottom: 2rem;
}

p {
  color: var(--text-secondary);
}

hr {
  border: none;
  border-top: 1px solid var(--border-color);
  margin: 2rem 0;
}

.market-update-row {
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 2rem; /* Increased padding */
  margin-bottom: 1.5rem;
  background-color: var(--background-primary);
  position: relative;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.05); /* Subtle shadow */
}

.market-update-row h4 {
  margin-top: 0;
  color: var(--text-primary);
}

.remove-button {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  background-color: var(--button-remove-bg);
  color: var(--button-remove-text);
  border: 1px solid var(--button-remove-border);
  padding: 0.5rem 1rem; /* Adjust padding for smaller button */
}
.remove-button:hover {
  opacity: 0.8;
}

.result-box {
  margin-top: 2rem;
  padding: 1.5rem;
  border-radius: 8px;
  background-color: var(--background-secondary);
}

.result-box h3 {
  margin-top: 0;
}

.result-box textarea {
  background-color: var(--background-primary);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  padding: 1rem;
  color: var(--text-primary);
}

/* src/App.css */

/* ... (all your existing styles) ... */

/* --- Styles for the new ProposalTitleInput component --- */
.proposal-title-builder {
  border: 1px solid var(--border-color);
  border-radius: 6px;
  padding: 1rem;
  background-color: var(--background-secondary);
}

.title-prefix-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.title-hash {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--text-secondary);
  padding: 0 0.5rem;
}

.title-number-input {
  width: 80px; /* Give the number input a fixed, smaller width */
}
</file>

<file path="src/App.jsx">
// src/App.jsx - CORRECTED LOGO FILENAMES
import React from 'react';
import { BrowserRouter as Router, Routes, Route, NavLink } from 'react-router-dom';
import './App.css';
import { useTheme } from './context/ThemeContext';

// Import page components
import MarketUpdatePage from './pages/MarketUpdatePage';
import MarketCreationPage from './pages/MarketCreationPage';
import CustomProposalPage from './pages/CustomProposalPage';
import InstructionsPage from './pages/InstructionsPage';

function App() {
  const { theme, toggleTheme } = useTheme();

  return (
    <Router>
      <div className="App">
        <div className="sidebar">
          <div className="sidebar-header">
            <a href="https://moonwell.fi" target="_blank" rel="noopener noreferrer">
              {/* VVVV THIS IS THE LINE WE ARE CHANGING VVVV */}
              <img 
                src={theme === 'light' ? '/Horizontal-Black.svg' : '/Horizontal-White.svg'} 
                alt="Moonwell Logo" 
                width="150" 
              />
            </a>
          </div>
          <nav className="navigation">
            <NavLink to="/" className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>Instructions</NavLink>
            <NavLink to="/market-update" className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>Market Update</NavLink>
            <NavLink to="/market-creation" className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>Market Creation</NavLink>
            <NavLink to="/custom-proposal" className={({ isActive }) => (isActive ? 'nav-link active' : 'nav-link')}>Custom Proposal</NavLink>
          </nav>

          <button onClick={toggleTheme} className="theme-toggle">
            Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode
          </button>
        </div>

        <main className="content-area">
          <Routes>
            <Route path="/" element={<InstructionsPage />} />
            <Route path="/market-update" element={<MarketUpdatePage />} />
            <Route path="/market-creation" element={<MarketCreationPage />} />
            <Route path="/custom-proposal" element={<CustomProposalPage />} />
          </Routes>
        </main>
      </div>
    </Router>
  );
}

export default App;
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/context/ThemeContext.jsx">
// src/context/ThemeContext.jsx
import React, { createContext, useState, useContext, useEffect } from 'react';

// Create the context
const ThemeContext = createContext();

// Create a provider component
export const ThemeProvider = ({ children }) => {
  // State to hold the current theme. It reads from localStorage to remember the user's choice.
  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');

  useEffect(() => {
    // Apply the theme to the body element whenever it changes
    document.body.setAttribute('data-theme', theme);
    // Save the user's choice in localStorage
    localStorage.setItem('theme', theme);
  }, [theme]);

  // Function to toggle the theme
  const toggleTheme = () => {
    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
};

// Create a custom hook to easily use the theme context
export const useTheme = () => useContext(ThemeContext);
</file>

<file path="src/contracts/addresses.js">
// src/contracts/addresses.js

// These addresses are now REAL and pulled from the official Moonwell Docs.

// The address of the main governance contract on Moonbeam.
// Found on Page 7 of your screenshots under "Moonbeam Contract Addresses".
// This is where the final transaction will be sent.
export const GOVERNOR_ADDRESS = "0x9A8464C4C11CeA17e191653Deb7CdC1bE0864216F";

// The address of the main Comptroller contract on Base.
// Found on Page 2 under "Base Contract Addresses".
export const COMPTROLLER_ADDRESS = "0xfBb21d0380beE3312B33c4353c8936a0F13EF26C";

// A list of all the MToken contract addresses on Base.
// Found on Page 2 under "Base Contract Addresses".
export const MTOKEN_ADDRESSES = {
  "MOONWELL_USDBC": "0x703843C3379b52F9FF486c9f5892218d2a065cC8",
  "MOONWELL_USDC": "0xEdc817A28E8B93B03976FBd4a3dDBc9f7D176c22",
  "MOONWELL_WETH": "0x628ff693426583D9a7FB391E54366292F509D457",
  // We can add more markets from the docs later if needed.
};
</file>

<file path="src/index.css">
/* src/index.css - UPGRADED WITH POLISHED FORM STYLES */

/* 1. Define color variables for the default (light) theme */
:root {
  font-family: 'GT America', system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  /* Light Theme Palette */
  --background-primary: #FFFFFF;
  --background-secondary: #F9FAFB;
  --text-primary: #0D0D0D;
  --text-secondary: #6B7280;
  --color-primary: #007BFF;
  --color-primary-hover: #0056b3;
  --border-color: #D1D5DB; /* Made slightly darker for better contrast */
  --focus-ring-color: rgba(0, 123, 255, 0.25);
  --active-nav-bg: #F0F7FF;
  --button-remove-bg: #FFF1F1;
  --button-remove-text: #D92D20;
  --button-remove-border: #FECDCA;
}

/* 2. Define overrides for the dark theme */
body[data-theme='dark'] {
  /* Dark Theme Palette */
  --background-primary: #1F2937;
  --background-secondary: #111827;
  --text-primary: #F9FAFB;
  --text-secondary: #9CA3AF;
  --color-primary: #3B82F6;
  --color-primary-hover: #60A5FA;
  --border-color: #4B5563;
  --focus-ring-color: rgba(59, 130, 246, 0.3);
  --active-nav-bg: #1E40AF;
  --button-remove-bg: #402329;
  --button-remove-text: #F87171;
  --button-remove-border: #5f333a;
}

/* 3. Apply base styles using the variables */
body {
  margin: 0;
  background-color: var(--background-secondary);
  color: var(--text-primary);
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* 4. Global Form Element Styling */
.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  font-weight: 500; /* Medium weight for labels */
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  color: var(--text-secondary);
}

input[type="text"],
select,
textarea {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background-color: var(--background-primary);
  color: var(--text-primary);
  box-sizing: border-box;
  transition: border-color 0.2s, box-shadow 0.2s;
  font-size: 1rem;
  font-family: 'GT America', sans-serif;
}

/* Crucial for UX: Add a focus ring to show which element is active */
input[type="text"]:focus,
select:focus,
textarea:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px var(--focus-ring-color);
}

/* 5. Global Button Styling */
button {
  font-family: 'GT America', sans-serif;
  font-weight: bold;
  padding: 0.75rem 1.5rem;
  border-radius: 6px;
  border: none;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.1s;
}

button:active {
  transform: translateY(1px);
}

.generate-button {
  background-color: var(--color-primary);
  color: white;
  width: 100%;
  font-size: 1.1rem;
}
.generate-button:hover {
  background-color: var(--color-primary-hover);
}

.add-button {
  width: 100%;
  background-color: transparent;
  color: var(--color-primary);
  border: 1px dashed var(--border-color);
}
.add-button:hover {
  background-color: var(--background-primary);
  border-color: var(--color-primary);
}

/* Font face rules */
@font-face {
  font-family: 'GT America';
  src: url('/fonts/GT-America-Standard-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'GT America';
  src: url('/fonts/GT-America-Standard-Bold.woff') format('woff');
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: 'GT America Mono';
  src: url('/fonts/GT-America-Mono-Light.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}
</file>

<file path="src/main.jsx">
// src/main.jsx
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
import { ThemeProvider } from './context/ThemeContext' // Import the provider

createRoot(document.getElementById('root')).render(
  <StrictMode>
    {/* Wrap the entire App in the ThemeProvider */}
    <ThemeProvider>
      <App />
    </ThemeProvider>
  </StrictMode>,
)
</file>

<file path="src/pages/CustomProposalPage.jsx">
// src/pages/CustomProposalPage.jsx - ADVANCED CALldata GENERATOR
import React, { useState } from 'react';
import { ethers } from 'ethers';
import { GOVERNOR_ADDRESS } from '../contracts/addresses.js';

// Helper function to trigger a file download
const downloadFile = (content, fileName, contentType) => {
  const blob = new Blob([content], { type: contentType });
  const href = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = href;
  link.download = fileName;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(href);
};

function CustomProposalPage() {
  const [proposalTitle, setProposalTitle] = useState('# MIP-BXX: Custom On-Chain Actions');
  // State to hold an array of action objects
  const [actions, setActions] = useState([
    { target: '', func: '', args: '', value: '0' }
  ]);
  
  const [generatedCalldata, setGeneratedCalldata] = useState('');
  const [statusMessage, setStatusMessage] = useState('');

  // Handles changes for any field in any action row
  const handleActionChange = (index, field, value) => {
    const newActions = [...actions];
    newActions[index][field] = value;
    setActions(newActions);
  };

  // Adds a new, empty action row to the form
  const addAction = () => {
    setActions([...actions, { target: '', func: '', args: '', value: '0' }]);
  };

  // Removes an action row by its index
  const removeAction = (index) => {
    const newActions = actions.filter((_, i) => i !== index);
    setActions(newActions);
  };

  const handleGenerate = (event) => {
    event.preventDefault();
    setGeneratedCalldata('');
    setStatusMessage('Generating calldata...');

    try {
      const allTargets = [];
      const allValues = [];
      const allCalldatas = [];

      for (const action of actions) {
        if (!ethers.isAddress(action.target)) {
          throw new Error(`Invalid Target Address: ${action.target}`);
        }

        // Create an ethers Interface from the user-provided function signature
        const iface = new ethers.Interface([`function ${action.func}`]);
        const functionFragment = iface.fragments[0];

        // Parse the arguments from the textarea (one per line)
        const args = action.args.split('\n').map(arg => arg.trim()).filter(Boolean);

        allTargets.push(action.target);
        allValues.push(ethers.parseEther(action.value || '0'));
        allCalldatas.push(iface.encodeFunctionData(functionFragment, args));
      }

      // Bundle the encoded actions into the final `propose` calldata
      const governorInterface = new ethers.Interface([
        "function propose(address[],uint256[],bytes[],string)"
      ]);

      const finalCalldata = governorInterface.encodeFunctionData("propose", [
        allTargets,
        allValues,
        allCalldatas,
        proposalTitle
      ]);

      setGeneratedCalldata(finalCalldata);
      setStatusMessage('Calldata generated successfully!');

    } catch (error) {
      console.error("Calldata generation error:", error);
      setStatusMessage(`Error: ${error.message}. Please check your inputs.`);
    }
  };

  return (
    <div>
      <h2>Custom Proposal Generator</h2>
      <p>This is an advanced tool. Use it to generate calldata for any on-chain action. Ensure all inputs are correct, as invalid data can lead to a failed proposal.</p>
      
      <form onSubmit={handleGenerate}>
        <div className="form-group">
          <label>Proposal Title</label>
          <input type="text" value={proposalTitle} onChange={(e) => setProposalTitle(e.target.value)} required />
        </div>
        <hr />

        {actions.map((action, index) => (
          <div key={index} className="market-update-row">
            <h4>Action #{index + 1}</h4>
            <div className="form-group">
              <label>Target Contract Address</label>
              <input type="text" placeholder="0x..." value={action.target} onChange={(e) => handleActionChange(index, 'target', e.target.value)} required />
            </div>
            <div className="form-group">
              <label>Function Signature</label>
              <input type="text" placeholder="e.g., transfer(address to, uint256 amount)" value={action.func} onChange={(e) => handleActionChange(index, 'func', e.target.value)} required />
            </div>
            <div className="form-group">
              <label>Arguments (one per line)</label>
              <textarea placeholder={'0x123...\n1000000000000000000'} value={action.args} onChange={(e) => handleActionChange(index, 'args', e.target.value)} rows={3} />
            </div>
            <div className="form-group">
              <label>Value (ETH to send)</label>
              <input type="text" placeholder="0.0" value={action.value} onChange={(e) => handleActionChange(index, 'value', e.target.value)} required />
            </div>
            {actions.length > 1 && (
              <button type="button" onClick={() => removeAction(index)} className="remove-button">
                Remove Action
              </button>
            )}
          </div>
        ))}

        <button type="button" onClick={addAction} className="add-button">
          + Add Another Action
        </button>
        <hr />
        <button type="submit" className="generate-button">Generate Calldata</button>
      </form>

      {statusMessage && <p className="status-message">{statusMessage}</p>}

      {generatedCalldata && (
        <div className="result-box">
          <h3>Generated Calldata</h3>
          <p>Copy the text below and paste it into the "Hex Data" field when sending a transaction to the Governor contract on Moonscan.</p>
          <p><strong>Governor Address:</strong> {GOVERNOR_ADDRESS}</p>
          <textarea
            readOnly
            value={generatedCalldata}
            style={{ width: '100%', height: '150px', marginTop: '10px' }}
            onClick={(e) => e.target.select()}
          />
        </div>
      )}
    </div>
  );
}

// ... other imports
import ProposalTitleInput from '../components/ProposalTitleInput'; // 1. Import

function CustomProposalPage() {
  // 2. The proposalTitle state is already here.
  const [proposalTitle, setProposalTitle] = useState('');
  // ... other state

  // ... other functions

  return (
    <div>
      {/* ... */}
      <form onSubmit={handleGenerate}>
        <div className="form-group">
          <label>Proposal Title</label>
          {/* 3. Replace the old input with the new component */}
          <ProposalTitleInput onTitleChange={setProposalTitle} />
        </div>
        <hr />
        {/* ... rest of the form */}
      </form>
      {/* ... */}
    </div>
  );
}

export default CustomProposalPage;
</file>

<file path="src/pages/InstructionsPage.jsx">
import React from 'react';

function InstructionsPage() {
  return (
    <div>
      <h2>Instructions</h2>
      <p>Welcome to the Moonwell Proposal Calldata Generator.</p>
      <ol>
        <li>Select the type of proposal you want to create from the navigation bar.</li>
        <li>Fill out the form with the required parameters.</li>
        <li>Click the "Generate Calldata" button.</li>
        <li>Copy the generated hexadecimal string from the text box.</li>
        <li>Go to Moonscan, find the MultichainGovernor contract, and submit a transaction, pasting the copied data into the "Hex Data" field.</li>
      </ol>
    </div>
  );
}

export default InstructionsPage;
</file>

<file path="src/pages/MarketCreationPage.jsx">
// src/pages/CustomProposalPage.jsx - CORRECTED
import React, { useState } from 'react';
import { ethers } from 'ethers';
import { GOVERNOR_ADDRESS } from '../contracts/addresses.js';
import ProposalTitleInput from '../components/ProposalTitleInput.jsx'; // Import the new component

// ... (downloadFile helper is correct and unchanged)

function CustomProposalPage() {
  const [proposalTitle, setProposalTitle] = useState(''); // State for the title
  const [actions, setActions] = useState([
    { target: '', func: '', args: '', value: '0' }
  ]);
  
  const [generatedCalldata, setGeneratedCalldata] = useState('');
  const [statusMessage, setStatusMessage] = useState('');

  // ... (handleActionChange, addAction, removeAction are correct and unchanged)

  const handleGenerate = (event) => {
    event.preventDefault();
    // ... (logic is correct, just ensure it uses `proposalTitle`)
    const finalCalldata = governorInterface.encodeFunctionData("propose", [
      allTargets,
      allValues,
      allCalldatas,
      proposalTitle // Use the state variable here
    ]);
    // ...
  };

  return (
    <div>
      <h2>Custom Proposal Generator</h2>
      <p>This is an advanced tool...</p>
      
      <form onSubmit={handleGenerate}>
        <div className="form-group">
          <label>Proposal Title</label>
          {/* Replace the old input with the new component */}
          <ProposalTitleInput onTitleChange={setProposalTitle} />
        </div>
        <hr />

        {/* ... (rest of the form is correct and unchanged) ... */}
      </form>

      {/* ... (rest of the component is correct and unchanged) ... */}
    </div>
  );
}

export default CustomProposalPage;
</file>

<file path="src/pages/MarketUpdatePage.jsx">
// src/pages/MarketUpdatePage.jsx - CORRECTED
import React, { useState, useEffect } from 'react';
import { ethers } from 'ethers';
import { generateProposalData } from '../utils/proposalLogic.js';
import { GOVERNOR_ADDRESS } from '../contracts/addresses.js';
import ProposalTitleInput from '../components/ProposalTitleInput.jsx'; // Import the new component

const MARKETS_URL = 'https://gist.githubusercontent.com/0xmims/7e9b2ceef27f5901bb0670ae9f6e0921/raw/803063c8e3368a86aec9b023694a66b1e5f5571e/markets.json';
const IRMS_URL = 'https://gist.githubusercontent.com/0xmims/bd32a5e0edc77c6c0baed14f9db77108/raw/c1c0876ccb3e98f7ec6cbf2d100a280db5b2c4f0/irms.json';

// ... (generateMarkdownContent and downloadFile helpers remain the same)
const generateMarkdownContent = (title, updates, irmsList) => {
  const specifications = updates
    .map(update => {
      const changes = [];
      if (update.collateralFactor) {
        changes.push(`- **New Collateral Factor:** \`${update.collateralFactor}\``);
      }
      if (update.reserveFactor) {
        changes.push(`- **New Reserve Factor:** \`${update.reserveFactor}\``);
      }
      if (update.irm) {
        const irmName = irmsList.find(i => i.address === update.irm)?.name || update.irm;
        changes.push(`- **New Interest Rate Model:** \`${irmName}\``);
      }
      if (changes.length === 0) return null;

      return `*   **${update.market}:**\n    ${changes.join('\n    ')}`;
    })
    .filter(Boolean)
    .join('\n');

  return `
${title}

## Summary
This proposal adjusts risk parameters for various markets on Moonwell Artemis to align with current market conditions and risk assessments.

## Motivation
The proposed changes are based on ongoing risk monitoring and aim to optimize capital efficiency while maintaining the safety and stability of the protocol. These adjustments ensure that the platform's parameters reflect the latest volatility and liquidity profiles of the assets.

## Specifications
The following risk parameters will be updated for the specified markets on the Base network:

${specifications}

## On-Chain Actions
The proposal will execute the parameter updates by generating and submitting the necessary calldata to the MultichainGovernor contract.
  `;
};

const downloadFile = (content, fileName, contentType) => {
  const blob = new Blob([content], { type: contentType });
  const href = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = href;
  link.download = fileName;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(href);
};


function MarketUpdatePage() {
  const [proposalTitle, setProposalTitle] = useState(''); // Changed from 'description'
  const [markets, setMarkets] = useState([]);
  const [irms, setIrms] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [marketUpdates, setMarketUpdates] = useState([]);
  
  const [generatedCalldata, setGeneratedCalldata] = useState('');
  const [generatedJson, setGeneratedJson] = useState('');
  const [generatedMarkdown, setGeneratedMarkdown] = useState('');
  const [statusMessage, setStatusMessage] = useState('');

  useEffect(() => {
    // ... (useEffect logic is correct and unchanged)
  }, []);

  // ... (addMarketUpdate, removeMarketUpdate, handleUpdateChange are correct and unchanged)

  const handleGenerate = (event) => {
    event.preventDefault();
    setGeneratedCalldata('');
    setGeneratedJson('');
    setGeneratedMarkdown('');

    if (!proposalTitle.startsWith('# ')) { // Use proposalTitle
      setStatusMessage('Error: Invalid proposal title generated.');
      return;
    }

    try {
      setStatusMessage('Generating proposal artifacts...');
      
      const markdownContent = generateMarkdownContent(proposalTitle, marketUpdates, irms); // Use proposalTitle
      const proposalData = generateProposalData({ description: markdownContent, updates: marketUpdates });
      setGeneratedCalldata(proposalData.finalCalldata);

      // ... (rest of the function is correct and unchanged)
    } catch (error) {
      console.error("Failed to generate artifacts:", error);
      setStatusMessage(`Error: ${error.message}`);
    }
  };

  if (isLoading) return <div>Loading markets and IRMs...</div>;
  if (error) return <div>Error: {error}</div>;

  return (
    <div>
      <h2>Market Parameter Updates</h2>
      <p>Use this form to generate all necessary artifacts for a governance proposal.</p>
      <form onSubmit={handleGenerate}>
        <div className="form-group">
          <label>Proposal Title</label>
          {/* Replace the old input with the new component */}
          <ProposalTitleInput onTitleChange={setProposalTitle} />
        </div>
        <hr />
        {marketUpdates.map((update, index) => (
          <div key={index} className="market-update-row">
            {/* ... (rest of the form is correct and unchanged) ... */}
          </div>
        ))}
        <button type="button" onClick={addMarketUpdate} className="add-button">+ Add Another Market Update</button>
        <hr />
        <button type="submit" className="generate-button">Generate Proposal Artifacts</button>
      </form>
      {/* ... (rest of the component is correct and unchanged) ... */}
    </div>
  );
}

export default MarketUpdatePage;
</file>

<file path="src/utils/proposalLogic.js">
// src/utils/proposalLogic.js - IRM UPDATE VERSION
import { ethers } from 'ethers';
import { comptrollerABI, mTokenABI } from '../contracts/abis.js';
import { COMPTROLLER_ADDRESS, MTOKEN_ADDRESSES } from '../contracts/addresses.js';

export const generateProposalData = (formData) => {
  const { description, updates } = formData;
  
  const allTargets = [];
  const allCalldatas = [];

  const comptrollerInterface = new ethers.Interface(comptrollerABI);
  const mTokenInterface = new ethers.Interface(mTokenABI);

  for (const update of updates) {
    // Destructure the new 'irm' field from the update object
    const { market, collateralFactor, reserveFactor, irm } = update;

    // Skip if all fields are blank for this row
    if (!collateralFactor && !reserveFactor && !irm) {
      continue;
    }

    const mTokenAddress = MTOKEN_ADDRESSES[market];
    if (!mTokenAddress) {
      throw new Error(`Address for market ${market} not found.`);
    }

    if (collateralFactor) {
      allTargets.push(COMPTROLLER_ADDRESS);
      const calldata = comptrollerInterface.encodeFunctionData("_setCollateralFactor", [
        mTokenAddress,
        ethers.parseUnits(collateralFactor, 18)
      ]);
      allCalldatas.push(calldata);
    }

    if (reserveFactor) {
      allTargets.push(mTokenAddress);
      const calldata = mTokenInterface.encodeFunctionData("_setReserveFactor", [
        ethers.parseUnits(reserveFactor, 18)
      ]);
      allCalldatas.push(calldata);
    }

    // NEW LOGIC BLOCK FOR IRM UPDATES
    if (irm) { // 'irm' will be the address of the new IRM contract
      allTargets.push(mTokenAddress); // The target is the mToken itself
      const calldata = mTokenInterface.encodeFunctionData("_setInterestRateModel", [
        irm // Pass the address directly
      ]);
      allCalldatas.push(calldata);
    }
  }

  if (allTargets.length === 0) {
    throw new Error("No parameters were set. Please fill out at least one field to update.");
  }

  const governorInterface = new ethers.Interface([
    "function propose(address[],uint256[],bytes[],string)"
  ]);

  const finalCalldata = governorInterface.encodeFunctionData("propose", [
    allTargets,
    allTargets.map(() => 0),
    allCalldatas,
    description
  ]);

  return {
    targets: allTargets,
    calldatas: allCalldatas,
    description,
    finalCalldata
  };
};
</file>

<file path="vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})
</file>

<file path="src/contracts/abis.js">
// src/contracts/abis.js

// This is the "user manual" for the main Governor contract.
// It tells ethers.js how to format the createProposal function call.
export const governorABI = [
  "function createProposal(address[] targets, uint256[] values, bytes[] calldatas, string description)"
];

// This is the "user manual" for the Comptroller contract.
export const comptrollerABI = [
  "function _setCollateralFactor(address mToken, uint newCollateralFactorMantissa)"
];

// This is the "user manual" for all MToken contracts.
export const mTokenABI = [
  "function _setReserveFactor(uint newReserveFactorMantissa)",
  // VVVV  ADD THIS MISSING LINE  VVVV
  "function _setInterestRateModel(address newInterestRateModel)"
];
</file>

</files>
